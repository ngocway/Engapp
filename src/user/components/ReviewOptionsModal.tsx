import React, { useState } from 'react';
import './ReviewOptionsModal.css';

interface ReviewOptionsModalProps {
  isOpen: boolean;
  onClose: () => void;
  onFlashcardClick: () => void;
  onQuizClick: () => void;
  vocabularyCount: number;
}

const ReviewOptionsModal: React.FC<ReviewOptionsModalProps> = ({
  isOpen,
  onClose,
  onFlashcardClick,
  onQuizClick,
  vocabularyCount
}) => {
  const [selectedOption, setSelectedOption] = useState<'flashcard' | 'quiz' | null>('flashcard');

  if (!isOpen) return null;

  const handleFlashcardClick = () => {
    setSelectedOption('flashcard');
  };

  const handleQuizClick = () => {
    setSelectedOption('quiz');
  };

  const handleStartClick = () => {
    if (selectedOption === 'flashcard') {
      onFlashcardClick();
    } else if (selectedOption === 'quiz') {
      onQuizClick();
    }
    onClose();
  };

  const handleCancelClick = () => {
    setSelectedOption(null);
    onClose();
  };

  return (
    <div className="modal-overlay" onClick={onClose}>
      <div className="review-options-modal" onClick={(e) => e.stopPropagation()}>
        <div className="modal-header">
          <h3>üéØ Ch·ªçn ph∆∞∆°ng th·ª©c √¥n t·∫≠p</h3>
          <button className="close-btn" onClick={onClose}>
            <i className="fa-solid fa-times"></i>
          </button>
        </div>
        
        <div className="modal-body">
          <p className="modal-description">
            B·∫°n c√≥ <strong>{vocabularyCount} t·ª´ v·ª±ng</strong> ƒë·ªÉ √¥n t·∫≠p.<br />
            H√£y ch·ªçn c√°ch h·ªçc ph√π h·ª£p v·ªõi b·∫°n üéØ
          </p>
          
          <div className="options-container">
            <div 
              className={`option-card flashcard-option ${selectedOption === 'flashcard' ? 'selected' : ''}`}
              onClick={handleFlashcardClick}
            >
              <div className="option-icon">
                üß†
              </div>
              <div className="option-content">
                <h4>√în theo Flashcard</h4>
                <p>H·ªçc t·ª´ v·ª±ng b·∫±ng th·∫ª ghi nh·ªõ t∆∞∆°ng t√°c.</p>
              </div>
              <div className="option-features">
                <span className="feature-tag">Hi·ªáu qu·∫£</span>
              </div>
            </div>

            <div 
              className={`option-card quiz-option ${selectedOption === 'quiz' ? 'selected' : ''}`}
              onClick={handleQuizClick}
            >
              <div className="option-icon">
                ‚ùì
              </div>
              <div className="option-content">
                <h4>Tr·∫£ l·ªùi c√¢u h·ªèi</h4>
                <p>Ki·ªÉm tra ki·∫øn th·ª©c b·∫±ng c√°c c√¢u h·ªèi tr·∫Øc nghi·ªám.</p>
              </div>
              <div className="option-features">
                <span className="feature-tag">ƒê√°nh gi√°</span>
              </div>
            </div>
          </div>

          <div className="actions">
            <button className="cancel-btn" onClick={handleCancelClick}>
              H·ªßy
            </button>
            <button 
              className="start-btn" 
              onClick={handleStartClick}
              disabled={!selectedOption}
            >
              üöÄ B·∫Øt ƒë·∫ßu √¥n t·∫≠p
            </button>
          </div>
        </div>
      </div>
    </div>
  );
};

export default ReviewOptionsModal;
